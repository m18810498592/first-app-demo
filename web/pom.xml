<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>first-app-demo</artifactId>
        <groupId>SpringBoot</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <!--项目名-->
    <artifactId>web</artifactId>

    <!--以war的形式打包-->
    <packaging>war</packaging>

    <!--
        Spring Boot的Maven插件（Spring Boot Maven plugin）能够以Maven的方式为应用提供Spring Boot的支持，即为Spring Boot应用提供了执行Maven操作的可能。
        Spring Boot Maven plugin能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用。
        Spring Boot Maven plugin的最新版本为2017.6.8发布的1.5.4.RELEASE，要求Java 8, Maven 3.2及以后。

        Spring Boot Maven plugin的5个Goals:
        spring-boot:repackage，默认goal。在mvn package之后，再次打包可执行的jar/war，同时保留mvn package生成的jar/war为.origin
        spring-boot:run，运行Spring Boot应用
        spring-boot:start，在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
        spring-boot:stop，在mvn integration-test阶段，进行Spring Boot应用生命周期的管理
        spring-boot:build-info，生成Actuator使用的构建信息文件build-info.properties
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--设置Main-Class属性-->
                    <mainClass>firstappdemo.FirstAppDemoApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>